///////////////////////////////////////////////////1. Ders///////////////////////////////////////////

int main(void)
{
int a[10] = {0, 1,2,3,4,5,6,7,8,9};
int * pe = a + 10;
int * p = a;

while (p != pe){
printf("%d ",*p);
++p;
}
} 

-------

int main(void)
{
int a[10] = {0, 1,2,3,4,5,6,7,8,9};
int * p1 = a + 5; //5. elemanı (değeri değil direk 5)
int * p2 = a + 8; //8. elemanı (değeri değil direk 8)

if (p2 > p1){//  DOĞRU 8 > 5
}

}

-----

void reverseArray(int * p, int size)
{
int * pe = p + size
while (p < pe)
swap(p++, --p);
}

void printArray(const int* pfirst, const int* plast)
{
while (pfirst < plast){
printf("%d ", *pfirst++);
}
printf("\n---------------------\n");
}

int main(void)
{
int a[SIZE];
randomize();
set_array_randım(a ,SIZE);
printf_array(a, SIZE);
reverseArray(a, SIZE);
printf_array(a, SIZE);
}

-------------------------------------

pointer idioms :

patter (dilden bağımsız)
idiom (dile bağımlı)
technic (alışılmış konuyu ele alma biçimi)

- içerik operatörü ile oluşturulan ifade L value expressiondur

- L value olduğunu tespit etmek için başına '&' koyulduğu zaman hata vermiyor ise L value

&x++   illegal
&++x   illegal
++&x   illegal

---------------------------------

expression ile statement farkı

x + 5  //expression
x + 5; //expression statement
x; //expression statement
5; //expression statement
; //null statement
if (x > 10) ++y; //if statement

expression çeşitleri:

statement
expression statement
control statement
null statement
compound statement
  loop stateemnt
  jump statement

----------------------------------------

int main(void)
{
int a[5] = {10, 20, 30, 40, 50);
int * p = a;
*p++ = 33; //33 değeri dizinin ilk elemanına atannır
*p = 77; //side effecten dolayı dizinin 2. elemanı 77 olur

*p++ //p'nin gösterdiği nesneye eriş p'yi 1 arttır
}


int main(void)
{
while(size--){        
*p++ = rand() % 1000;
}
}

while(size--){
*p = rand() % 1000;
p = p + 1; //aynı anlama gelir yukarıdaki ile
}
}

int main(void)
{
int a[5] = {10 ,20 ,30 ,40 ,50};
int * p = a;
*++p = 99; //dizinin 2. elemanına atama olur
}
























