//////////////////////////////////////////////////////// 1 . Ders ///////////////////////////////////////////////////////////////////

int get_max(int n, ...)
{
va_list args;
va_start(args, n);
int max;

for (int i = 0; i < n; ++i) {
int ival = va_args(args, int);
if (i == 0)
max = ival;
else if (ival > max)
max = ival
}

va_end(args);
return max;
}

int main(void)
{
int x = 10;
int y = 20;
int z = 15;

printf("max = %d\n", get_max(3, x, y,z));
}


------------------------------


void myprintf(const char* p, ...)
{
va_list args;
va_start(args, p);

while (*p) {
int c = toupper(*p);

if (c == 'I') {
printf("%d\n", va_args(args, int));
}
else if (c == 'U') {
printf("%u\n", va_args(args,unsigned int));
}
else if (c == 'L') {
printf("%ld\n", va_args(args, long));
}
if (c == 'S') {
printf("%d\n", va_args(args, const char *));
}
else if (c == 'F') {
printf("%f\n", va_args(args, double));
}
++p;
}

va_edn(args);
}


int main(void)
{
int x = 10;
unsigned int y = 3u;
long lval = 5;
char str[] = "murat";
double dval = 4.45;

myprintf("iULsF", x, y, lval, str, dval);
}


--------------------------------

char * strapp(const char* p, ...)
{
va_list arglist;
va_list args;

va_start(arglist, p);
va_copy(args, arglist);

size_t len = strlen(p) + 1;

const char *pstr;
while ((pstr = va_args(arglist, const char*)) != NULL) {
len += strlen(pstr);
}

va_end(arglist);
char *pd = (char *) malloc(len + 1);
if (!pd) 
return NULL;

strcpy(pd , p);
while ((pstr = va_args(arglist, const char*)) != NULL) {
strcat(pd ,pstr);
}
va_end(args);

return pd;


int main(void)
{
char s1[] = "cinar";
char s2[] = " gursay";

char *pd = strapp(s1, s2, " volkan ", " gundogdu", NULL);
printf(" (%s)\n", pd);

free(pd);
}

--------------------------

void func(const char* p, ...)
{
char buffer[1000];

va_list args;
va_start(args, p);
vsprintf(buffer, p, args);
}

int main()
{
int x = 10;
int y = 20;
double dval = 4.5;

func("%d %d %f\n", x, y, dval);
}

========================================================================

compound literals (bileşik sabit)
----------------------------------

c99 ile dile eklendi c++ 'da yok


int main()
{
(int){14} //değeri 14 olan int değişkeni

}



-------------

//adreste verebiliriz

void func(const char int* ptr)
{
printf("*ptr = %d\n", *ptr);
}

int main()
{
func(&int) {14});
}

--------------

void func(const char int* ptr)
{
while (size--)
printf("%d "i *ptr++);
printf("\n");
}


int main()
{
func((int[]) {2, 5, 7, 123}, 4);
}

----------------

int main(void)
{
int* p = (int[]{2,5,7,123};

p[0] = 45;
p[3] = 7;

for (int i = 0; i < 4; ++i) {
printf("%d ", p[i]);
}
}

-----------------

int main(void)
{
Date mydate;

mydate = (Date){3,11,2022};

}

---------------

int main(void)
{
struct tm* tp = localtime(&(time_t) {time(0)});

printf("%02d:%02d:%02d", tp->tm_hour, tp->tm_m,n, tp->sec);

printf_array((int[10]) {[5] = 5, [7] = 7, [9] = 9}, 10);
}

----------------

struct Data {
int a, b, c;
double dx, dy;
char str[20];
};

int main(void)
{
(struct Data) {.b = 12, .dx = 4.5, .str = "mustafa"}
}

----------------

int main(void)
{
int a[5] = {2,4,6,3,7};


}

===================================================

VLA (variable lenght array)
-----------------------------

c99 ile dile eklendi ancak c11 ile de kulancıc tercihine bırakıldı kullanılması
















