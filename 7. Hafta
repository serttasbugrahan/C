///////////////////////////////////////////////////1. Ders//////////////////////////////////////////////////////

int toupper(int ch); //karakteri büyük harf yapar
int tolower(int ch); //karakteri küçük harf yapar

int main(void)
{
int c1, c2;
printf("iki karakter girin: "); //a A
c1 = getchar();
c2 = getchar();

if (toupper(c1) == toupper(c2))
printf("aynı) //aynı çıkar
else
printf("farklı)
}

--------------------

int putchar(int) : ascci'yi karaktere çevirir

int main(void)
{
for (int i = 'A'; i <= 'Z'; ++i){
putchar(i); //ilk büüyk harfleri sonra küçük harfleri yazar
}
}

------------------------------------

döngü deyimleri (loop statements) : kod parçasını koşula bağlı olarak tekrararlamaya denir

while
------

while (expr) : expr true olduğu sürece devam eder

-while parantezi içinde void tür olamaz 
-parantex içi boş olamaz
-parantex içinde statement olamaz

while(expr) //if gibi true ya da false elde edilir
statement;

while (i < 100 && k > 200) //bu şart sağlandığı sürece bu şart sağlanır
statement;

int main(void)
{
int x = 0;

while (x++ < 10);
printf("%d", x); // çıktı sonucu 11
}

while(1){ //always
}

bir dögüden hangi yollarla çıkılır :

1. kontrol ifadesini yanlış olması ile :
2. return statement ile :

while (expr)
{
if(ce){
return;
}
}

3. break statement ile :

while (expr)
{
if(ce){
break;
}
}

4. goto 
5. program sonlanabilir, exit(1)
--------------

continue : döngü içinde  kodları bay pass ederek diğer kodlara geçer

int x = 1;
while (x > 0){
++x
}
!!işaretli türlerde taşma tanımısz davranıştır

!!if'de olduğu gibi null statemnet burada da kullanılır. ; - {} - continue

////////////////////////////////////////////////////2. Ders///////////////////////////

n kez dönen dögü idiyomu

int n = 3;
while (n-- > 0){ //maximal munch kuralından dolayı --> bu şekildede yazılabilir
printf("necati\n");
}


int ndgit(int val)
{
int digit_count = 0;
if (val == 0)
return 0;
while (val != 0){
++digit_count
val /= 10;
}
return digit_count;
}


int sum_digit(int val)
{
while(vall != 0){
while (val != 0){
sum += val % 10;
val /= 10;
}
return sum;
}

int main(void)
{
int x;
printf("bir tamsayi girin: ")
scanf("%d", &x);
printf("%sayisinin basamakları toplamı %d\n", x, sum_digit(x));
}


int dreverse(int val)
{
int result = 0;
while(val){
result = result * 10 + val % 10;
val /= 10;
}
return result;
}

int main(void)
{
int x;
printf("bir tamsayı girin: ");
scanf("%d", &x);

printf("%d sayisinin tersi %d\n", x, dreverse(x));
}
//denklem köklerini bulan program
int main(void)
{
int a,b,c;

printf("denklemin katsayilarini giriniz: ");
scanf("%d%d%d", &a,&b,&c;

double delta = b* b -4 * a * c;

if (delta < 0){
printf("denklemin gercek koku yok!");
}
else if (delta == 0){
printf("tek gercek kok var = %f\n" -b / (2. * a));
}
else{
delta = sqrt(delta); //değişkeni anlamı dışında kullanma burada hatalı kullanım vardır
double root_1 = (-b - delta) / (2. * a);
double root_2 = (-b + delta) / (2. * a);
}
}


