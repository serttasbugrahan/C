garbage value (çöp değer) : 

!!eğer otomatik ömürlü bir değişkene ilk değer vermez isek (onu initialize etmezsek) o değişken çöp değişkne ile başlar
!!bir değişjkeni çöp değeri ile kullnamak tanımsız davranıştır


------------------------------------------


!! bir blok içinde bildirilen isimlerin scope'u bildirildiği noktadan ilgili bloğun kapanan küme parantezine kadar olan kod alanıdır

int main(){
if(1){
int x = 10;
}
x = 20; // burada hata olur parantez dışında kullanılmıştır.

------------------------------------------

fonskiyonlar (functions):

a) fonksiyonu tanımlamak (to define a function) (function defibition)
b) fonksiyonu çağırmak (to call a function) (function call)
c) fonksiyonu bildirmek (to declare a function) (function declaration)

--------------------------------------------

while(expr){
; // hiçbir şey yapılmaması istendiği zaman  ';' koyulur
}

---------------------------------------

return;
sadece void function'da kullanılır
kodun belli bölümleri kullanılmak istendiği zaman kullanılmalı

void func(int x){
//statemnet
//statemnet
if ( x > 10){  //x >10 doluğu zaman diğer statement çalışmasın fonksiyonu sonlandır
return;
}
//statement;
}

-----------------------------------------

!! fonskiyon 0 dışında hangi değeri döndürürse döndürsün true değerini döndürür

3. başarı bilgisi

standart c kütüphanesi 0 = başarılı diğer değerler başarısız olarak döndürür



--------------------------------------------

while (expr) : expr true olduğu sürece devam eder

-while parantezi içinde void tür olamaz 
-parantex içi boş olamaz
-parantex içinde statement olamaz


--------------------------------------------

!!işaretli türlerde taşma tanımısz davranıştır

-------------------------------------------

while (expr){
while( (expr2){
if (c_exp)
goto out
}
}
out:

//bütün döngülerden çıkılmak istenirse goto statemnet kullan

-------------------------------------------

continue; 
-sadece döngülerde kullanılır
-döngüden çıkarmaz
-kendinden sonrakileri yapma

while (exp)
{
statement
statement
statement
continue; //continue altında kalan statement'lar kullanılmaz döngünğn başına döner
statement
statement
}

----------------------------------------

long double --> double --> float //bu kısım var ise burası ile yapılır

long long --> long --> int

short --> char --> _Bool


!! integral promotion : int türünden düşük operandları (short, char, _Boll) int türüne yükseltmeye denir

- eğer rank'ler farklı ise fakat büyük olan rank işaretsiz ama küçük olan işaretli ise rank'i büyük unsigned ile yapılır

- eğer rank'ler aynı ise işaretler farklı ise rank'i küçük olan unsigned yapılır

dikkat edilmesi gerekenler :
- işaretli ile işaretsizi işleme sokma
- int altı türlerin int türüne yükseltileceğini unutma
- rankler aynı ise tür dönüşümü olmaz

!! işaretsiz türlerde taşma diye bir şey yoktur

!! c dilinde lojik ifade beklenen yerlerde void kullanılamaz
 
--------------------------------------


(void)isprime(x) //bir fonksiyonun geri dönüş değerini kullanmak istemediğimiz zaman bunu yaparız

---------------------------------------

int main(void)
{
for (int i = 0; i < 100; i++){
printf("%d ", rand()); //2. çalıştırlmasında aynı tohum değerinde dolayı aynı sayılar rastgele üretilir
}
}

-----

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define randomize() (srand((unsigned)time(0))) 

int main(void)
{
randomize();

for (int i = 0; i < 10; i++)
{
	printf("%d\n",rand()); //her çalıştığında farklı sayı üretir
}

}


--------------------------------------

big O notation : algoritmanın karmaşıklığını anlatmak için söylenir
Big O(1) : constant(sabit) time
Big O(n) : linear complexity
Big O(n log n) : linearitmic 
Big O(n2) : quadretic complexity
Big O(n3) : cubic complexity


-----------------------------------------

int main(void)
{
int a[10];
int b[10];
a = b; //böyle yazılamaz, array decay kuralı ile igilidir
}

array decay : bir dizinin ismin bir ifade (expression) içinde kullandığızda derleyici
dizi ismini dizinn ilk elemanının adresine dönüştürme işlemine denir

------------------------------------------

!! fonksiyonların parametre değişkenleri dizi türlerinden olamaz
void func (int a[10])

!! fonksiyonların geri dönüş değeri türü dizi türü olamaz

!! arraylerde eğer ilk değer verilmez ise static ömürlü ise zero ile hayata başlar

--------------------------------------------

int main(void)
{
int a[10] = {2, 5, 7, 23, 90, 6, 4, 13, 22, 80}; //ilk değer verme
int a[10] = {2, 5, 7}; //geri kalan değerler 0 ile hayata başlar
int a[10] = {0}; //0 değerleri hepsine atanır
int a[] = {0,1,2,3,4}; //dizinin boyutunu ilk değer verince kendisi anlar
}













