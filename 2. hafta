////////////////////////////////////////////////////3. DERS///////////////////////////////////////


Global isimleri:
1)
İdentifier : isim demektir
Declaration(bildirim) : ismin ne anlama geldiğini söyler
2)
Statement (deyim) : bir işlem yaptırır
X = y + z;

===========================================


Tokenizing : derleme işlemi başında derleyici kaynak kodu en küçük birimlerine ayrırmasına nedir
Token : en küçük birim(atom)

=============================================

Keyword(anahtar sözcük) : c de başka anlamalarda kullanılamayanlara denir(do, while, for, signed, unsigned, union)
Reserved word

============================================

İdentifier(isim) : varlıkların adları anlamına gelen tokenlara identifier denir.
-değişkenler
-fonksiyonlar
-sabitler
-türler
-etiketler

=============================================
Case-sensitive : dilde yazılanların büyük veya küçük yazılması önem taşımaz
COUNTER
Counter

===========================================

Constants(sabitler):
Tam sayı sabitler (integer constants)
Gerçek sayı sabitleri(floating constants)


10’luk sayı sistemi (decimal) 41
16’lık sayı sistemi(hexadecimal) 0x41
8’lik sayı sistemi(octal) 041
! c dlinde 2’li sistem kullanılmaz c++’da kullanılır

=======================================================

As if(sanki – adeta) kuralı: derleyeicinin uygun şekilde düzenlemeler yapması

=======================================================

scope(kapsam)
name lookup(isim arama):ismin, neyin ismi olduğunu anlama sürecidir

=======================================================

data type:
nesnelerin değerlerinin derleyicinin koda bakması sırasaında anlaşılıyor ise bu static türdür(static typeing). C static typing’dir---phyton dynamic typingdir.

Tür, nesne için bellekte kaç byte’lık bir yere ihtiyaç duyduğunu söyler(storage)

Type system
Data type
Value
Nesnelerinin strorage, type, adresleri var

Lifespan(ömür)
Expression (ifade)





////////////////////////////////////////////////////4. DERS/////////////////////////////////////////

expression (ifade)
statement (deyim)
value category: c de bir ifade ya R value ya da L value olabilir
-L value (expression)
-R value (expression)

=======================================
 
-L value expression : nesne gösteren – nesne anlamına gelen ifade
x
a[1][2].ptr ->x

-R value expression :bellekte nesneyi temsil etmeyen ifadeye denir 
 x + y

Dikkat!
c ve c++ dillerinde değer kategorisi farklı olabilir

eğer başına operatör koyulduğu zaman hata vermiyorsa L value denir
&x --> L value
&x++ --> R value 

====================================

constant expression (sabit ifadesi): sabitin değerini önceden bilir

int x = 10;
int a[x] = {0};

x burada constant expression olmadığı için hata meydana gelir

========================================

sayı sistemi(numbering system)

decimal system
hexadecimal system
octal
binary system

digit (basamak)


binary system:
-tam sayilar                        
a)unsigned binary system(işaretsiz):
negatif sayilar ele alınmadan sadece pozitif ve sıfır
3,5,0
b)signed binary system(işaretli):
hem negatif hem pozitif sayilar olabilir

=================================================

[] = 
() =
{} = brace
* = asteriks
& = ampersant
: = colon 
; = semi colon
# = number sign

=================================================

                         C
translation unit <= preproccer (ön işlemci komutu) <= source file

function:
standat C funtion : printf,scanf bunlar stadandart c fonksi

to define a function (function definitian)
to call a function ( function call)
to declare a function (function declaration):fonksiyonu bildirmek(ne olduğunu)

function implementation (fonksiyon tanımlamak)

#include <stdio.h>

int main(void){

 printf("hello world");

}

=====================================

-data type
basic types : bu türleri var kabul ederiz

integer types:
-char types  1 byte
  char type
  signed char type -128 127
  unsigned char 0 255
-short integer types
  signed short
  unsigned short
-int types
   signed int
   unsigned int
-long integer types
    signed long
    unsigned long
-long long integer types (C99 standartı ile eklendi)
    signed long long
    unsigned long long
-_Bool type 1 byte

short <= int <= long <= long long 

user defined types : kullanıcı tarafından oluşturulmuş

örnek:
gün ay yıl
11 şubat 2022

Date mydate{12,2,2022}  = //user defined
int gün,ay,yil = //böyle kullanılması tercih edilmez yukarıdaki tercih edilir



